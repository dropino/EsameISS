System -trace waiterwalker 

Event    waiterwalkerstarted   : waiterwalkerstarted(X)
Event    walkerstarted   : walkerstarted(X)
	
Request  moveForTask 	: moveForTask(TASK, N)
Reply    movementDone   : movementDone(OK)
Reply	 walkbreak  	: walkbreak(X,Y)  

Reply walkerDone : walkerDone(X,Y)

Request	doPlan : doPlan(X,Y)

Reply walkerError : walkerError( $XT,$YT )

Context ctxwalker ip [host="localhost" port=8050]     
 
//ExternalQActor walker context ctxwalker

CodedQActor walker context ctxwalker className "it.unibo.walker.Walker"
 
QActor waiterwalker context ctxwalker {  
	[#
		var XT = "0"
		var YT = "0"
		
		var TASK				= "" 
		var N					= ""
	#] 


	State s0 initial {	     
 		
 		solve( consult("waiterwalkerkb.pl")	 )
 		
		println("waiterwalker | STARTS")
		emit waiterwalkerstarted : waiterwalkerstarted(ok)
		
	}	
	Transition t0 whenEvent walkerstarted -> waitCmd   


	 
	State waitCmd {	     
 		println("waiterwalker | waits for a command 'movetoCell'")
	}	
	Transition t0 whenRequest moveForTask -> locateObjective
 	
	State locateObjective{
		printCurrentMessage
		onMsg( moveForTask : moveForTask(TASK, N) ){
			[# 
				TASK = payloadArg(0).toString()
				N = payloadArg(1).toString()
			#]
			println("waiterwalker | task received: $TASK, jolly: $N")
			
			solve( pos($TASK,$N,X,Y)  )  
			ifSolved { 
				[# 
					XT = getCurSol("X").toString()
					YT = getCurSol("Y").toString()
				#] 
				println("waiterwalker | query solved with values ($XT,$YT)")
 			}
			println("waiterwalker | sending objective location ($XT,$YT) to walker")
			
			request walker -m doPlan : doPlan($XT,$YT)		
		}
	}
	Transition t1 whenReply walkerDone -> movementCompleted
				  whenReply walkerError -> movementError



	State movementCompleted{
		println("waiterwalker | POINT ($XT,$YT) REACHED")
	    replyTo moveForTask with movementDone : movementDone(OK) 					
	}
	Goto waitCmd
	
	
	
	State movementError{
		println("waiterwalker | FAILS")
		printCurrentMessage
		onMsg( moveForTask : moveForTask(X, Y) ){
			[# 
				XT = payloadArg(0).toString()
				YT = payloadArg(1).toString()
			#]
	  		replyTo moveForTask with walkbreak : walkbreak( $XT, $YT ) 	
		}
	}
	Goto waitCmd  
		
	
 }
 
